#+TITLE: Desktop Config
#+PROPERTY: header-args :mkdirp yes
#+AUTHOR: DemonKingSwarn

* Profile
** Things
#+begin_src sh :tangle ~/.config/shell/profile
  #!/bin/zsh

  # To start x session
  if [ "$TTY" = "/dev/tty1" ]; then
	  printf "\033[1;32mBooting into bspwm!\033[0m\n"
	  startx "$XDG_CONFIG_HOME/X11/xinitrc" -- -keeptty 2> /dev/null
  fi

  # to set tty's color scheme
  if [ "$TERM" = "linux" ]; then
	  printf %b '\e[40m' '\e[8]'
	  printf %b '\e[37m' '\e[8]' 
	  printf %b '\e]P0282a36'    
	  printf %b '\e]P86272a4'    
	  printf %b '\e]P1ff5555'    
	  printf %b '\e]P9ff7777'    
	  printf %b '\e]P250fa7b'    
	  printf %b '\e]PA70fa9b'    
	  printf %b '\e]P3f1fa8c'    
	  printf %b '\e]PBffb86c'    
	  printf %b '\e]P4bd93f9'    
	  printf %b '\e]PCcfa9ff'    
	  printf %b '\e]P5ff79c6'    
	  printf %b '\e]PDff88e8'    
	  printf %b '\e]P68be9fd'    
	  printf %b '\e]PE97e2ff'
	  printf %b '\e]P7f8f8f2'
	  printf %b '\e]PFffffff'
	  clear
  fi

export EDITOR="nvim"
export TERMINAL="st"
export BROWSER="firefox"

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"

#+end_src

** =$PATH=
#+begin_src sh :tangle ~/.config/shell/profile
export PATH=/home/demonkingswarn/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/demonkingswarn/.cargo/bin:/home/demonkingswarn/.local/bin/statusbar:/home/demonkingswarn/Applications
#+end_src

* Bash
#+begin_src bash :tangle ~/.bashrc
eval "$(starship init bash)"
#+end_src

* Zsh
** Basic Configurations
#+begin_src sh :tangle ~/.config/zsh/.zshrc
  #  ____  _____ __  __  ___  _   _
  # |  _ \| ____|  \/  |/ _ \| \ | | (c) Swarnaditya Singh aka DemonKingSwarn
  # | | | |  _| | |\/| | | | |  \| | Github- https://github.com/demonkingswarn
  # | |_| | |___| |  | | |_| | |\  |
  # |____/|_____|_|  |_|\___/|_| \_|
  #

  # Enable colors and change prompt:
  autoload -U colors && colors
  PS1="%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b "


  # History in cache directory:
  HISTSIZE=10000
  SAVEHIST=10000
  HISTFILE=~/.config/zsh/histfile

  # Basic auto/tab complete:
  autoload -U compinit
  zstyle ':completion:*' menu select
  zmodload zsh/complist
  compinit
  _comp_options+=(globdots)		# Include hidden files.

  # vi mode
  bindkey -v
  export KEYTIMEOUT=1

  # Use vim keys in tab complete menu:
  bindkey -M menuselect 'h' vi-backward-char
  bindkey -M menuselect 'k' vi-up-line-or-history
  bindkey -M menuselect 'l' vi-forward-char
  bindkey -M menuselect 'j' vi-down-line-or-history
  bindkey -v '^?' backward-delete-char

  # Change cursor shape for different vi modes.
  function zle-keymap-select {
    if [[ ${KEYMAP} == vicmd ]] ||
       [[ $1 = 'block' ]]; then
      echo -ne '\e[1 q'
    elif [[ ${KEYMAP} == main ]] ||
         [[ ${KEYMAP} == viins ]] ||
         [[ ${KEYMAP} = '' ]] ||
         [[ $1 = 'beam' ]]; then
      echo -ne '\e[5 q'
    fi
  }
  zle -N zle-keymap-select
  zle-line-init() {
      zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
      echo -ne "\e[5 q"
  }
  zle -N zle-line-init
  echo -ne '\e[5 q' # Use beam shape cursor on startup.
  preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.

  # Use lf to switch directories and bind it to ctrl-o
  lfcd () {
      tmp="$(mktemp)"
      lf -last-dir-path="$tmp" "$@"
      if [ -f "$tmp" ]; then
          dir="$(cat "$tmp")"
          rm -f "$tmp"
          [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
      fi
  }
  bindkey -s '^o' 'lfcd\n'

  function chst {
      [ -z $1 ] && echo "no args provided!" || (curl -s cheat.sh/$1 | bat --style=plain)
  }

  fshow() {
    git log --graph --color=always \
        --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
    fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
        --bind "ctrl-m:execute:
                  (grep -o '[a-f0-9]\{7\}' | head -1 |
                  xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
                  {}
  FZF-EOF"
  }

  # set fzf colors
  export FZF_DEFAULT_OPTS='--color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9 --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4'

  # Edit line in vim with ctrl-e:
  autoload edit-command-line; zle -N edit-command-line
  bindkey '^e' edit-command-line

  source "$HOME/.config/shell/profile"
  source "$XDG_CONFIG_HOME/shell/aliasrc"
  source "$HOME/dl/gitthings/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

  # kitty settings
  if [ "$TERM" = "xterm-kitty" ] ; then 
          eval "$(starship init zsh)"
          colorscript -r
  fi

  # st settings
  if [ "$TERM" = "st-256color" ] ; then 
          cat ~/.cache/wal/sequences
          clear
  fi

  # tty settings
  if [ "$TERM" = "linux" ] ; then
          colorscript -r
  fi

#+end_src

** Alias
#+begin_src sh :tangle ~/.config/shell/aliasrc
  #!/bin/zsh

  alias dots="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
  alias ..='cd ..'
  alias hst='nvim ~/.config/zsh/histfile'
  alias zrc="nvim $HOME/.config/zsh/.zshrc"
  alias ga='git add'
  alias gc='git commit -m'
  alias push='git push'
  alias weather='curl -s "https://wttr.in/?1n"'

  if [ "$TERM" = "xterm-kitty" ] ; then
          alias neofetch='neofetch --kitty ~/.config/neofetch/neofetch.jpeg --size 15%'
  else
          alias neofetch='neofetch --source ~/.config/neofetch/neofetch.txt'
  fi

  alias cat="bat --paging=never"
  alias less="bat --paging=always"
  alias x='exit'

  if [ "$TERM" = "linux" ] ; then
          alias ls='/bin/ls --color=auto'
  else
          alias ls='exa --icons'
          alias ll='exa -lh --icons'
          alias la='exa -lah --icons'
  fi

  # Confirmations
  alias mv='mvg -ig'
  alias rm='rm -i'
  alias ln='ln -i'
  alias cp='cpg -ig'

  alias shred='shred -f -u -z -v -n 3'

  # QoL
  alias n="$EDITOR"
  alias c='clear'
  alias xcc='xclip -selection clipboard'
  alias xco='xclip -selection clipboard -o'

  # Package Management
  alias install="paru -S --noconfirm"
  alias uninstall="paru -R --noconfirm"
  alias update="paru -Syu --noconfirm"
  alias garbage="paru -Rs $(paru -Qqtd) --noconfirm"

#+end_src

* Kitty
** Basic Configuration
#+begin_src conf :tangle ~/.config/kitty/kitty.conf
  font_family       monospace
  font_size 12.0

  background_opacity 0.8

  include ./palenight.conf
#+end_src

** Theme
#+begin_src conf :tangle ~/.config/kitty/palenight.conf
foreground            #959dcb
background            #292d3e
selection_foreground  #eceef0
selection_background  #607c8b
url_color             #82aaff

color0   #434759
color8   #434758

color1   #f07178
color9   #ff8b92

color2   #c3e88d
color10  #ddffa7

color3   #ffcb6b
color11  #ffe585

color4  #82aaff
color12 #9cc4ff

color5   #c792ea
color13  #e1acff

color6   #89ddff
color14  #a3f7ff

color7   #d0d0d0
color15  #fefefe

#+end_src

* Polybar
#+begin_src conf :tangle ~/.config/polybar/config.ini
  [colors]
  bg = ${xrdb:background}
  bg-alt = ${xrdb:color0}
  fg = ${xrdb:foreground}
  fg-alt = ${xrdb:color7}

  red = #ff7a93

  trans = #00000000
  semi-trans-black = #cc000000

  shade-1 = #32344a
  shade-2 = #444b6a
  shade-3 = #787c99
  shade-4 = #CACACE
  shade-5 = #acb0d0

  [bar/main]
  width = 100%
  height = 30
  offset-y = 0
  top = true
  fixed-center = true

  wm-restack = bspwm

  override-redirect = false

  scroll-up = next
  scroll-down = prev

  enable-ipc = true

  background = ${colors.bg}
  foreground = ${colors.fg}

  font-0 = "JetBrains Mono Nerd Font:style=Medium:size=10;2"
  font-1 = "JetBrains Mono Nerd Font:style=Bold:size=10;2"
  font-2 = "JetBrainsMono Nerd Font:size=19;5"
  font-3 = "Noto Color Emoji:pixelsize=16:style=Regular:scale=10;2"

  modules-left = bspwm
  #modules-center = xwindow
  modules-right = nettraf empty-space volume empty-space clock empty-space internet

  tray-position = right
  tray-padding = 2
  tray-maxsize = 22

  cursor-click = pointer

  [bar/external]
  monitor = HDMI1
  modules-right = pulseaudio margin session
  inherit = bar/main

  [settings]
  screenchange-reload = true

  [module/bspwm]
  type = internal/bspwm

  format = <label-state> <label-mode>

  label-focused = %name%
  label-focused-foreground = ${colors.fg}
  label-focused-padding = 2

  label-occupied = %name%
  label-occupied-foreground = ${colors.fg-alt}
  label-occupied-padding = 2

  label-empty = 
  label-empty-foreground = ${colors.bg-alt}
  label-empty-padding = 2

  [module/empty-space]
  type = custom/text
  content = " | "

  [module/nettraf]
  type = custom/script
  interval = 1
  exec = nettraf
  format = <label>

  [module/volume]
  type= custom/script
  interval = 1
  exec = volume
  format = <label>
  click-left = alacritty -e pulsemixer
  click-right = pamixer -t
  scroll-up = pamixer -i 2 5%
  scroll-down = pamixer -d 2 5%

  [module/clock]
  type = custom/script
  interval = 1
  exec = clock
  format = <label>

  [module/internet]
  type = custom/script
  interval = 1
  exec = internet
  format = <label>

  [module/weather]
  type = custom/script
  exec = forecast
  label = "%output%"
  click-left = $TERMINAL -e curl "wttr.in/?1n"
  interval = 1800

  [module/kbselect]
  type = custom/script
  interval = 1
  exec = kbselect
  format = <label>

  [module/xwindow]
  type = internal/xwindow
  label = %title:0:30:...%

  format-underline = ${colors.bg}
  format-background = $(colors.bg}
  format-padding =

  [module/pacman-pkgs]
  type = custom/script
  exec = printf "📦 " && paru -Qu | wc -l
  interval = 1
  click-left = alacritty -e paru -Syu

#+end_src

* Zathura
#+begin_src conf :tangle ~/.config/zathura/zathurarc
set window-title-basename "true"
set selection-clipboard "clipboard"

# Dracula color theme for Zathura
# Swaps Foreground for Background to get a light version if the user prefers

#
# Dracula color theme
#

set notification-error-bg       "#ff5555" # Red
set notification-error-fg       "#f8f8f2" # Foreground
set notification-warning-bg     "#ffb86c" # Orange
set notification-warning-fg     "#44475a" # Selection
set notification-bg             "#282a36" # Background
set notification-fg             "#f8f8f2" # Foreground

set completion-bg               "#282a36" # Background
set completion-fg               "#6272a4" # Comment
set completion-group-bg         "#282a36" # Background
set completion-group-fg         "#6272a4" # Comment
set completion-highlight-bg     "#44475a" # Selection
set completion-highlight-fg     "#f8f8f2" # Foreground

set index-bg                    "#282a36" # Background
set index-fg                    "#f8f8f2" # Foreground
set index-active-bg             "#44475a" # Current Line
set index-active-fg             "#f8f8f2" # Foreground

set inputbar-bg                 "#282a36" # Background
set inputbar-fg                 "#f8f8f2" # Foreground
set statusbar-bg                "#282a36" # Background
set statusbar-fg                "#f8f8f2" # Foreground

set highlight-color             "#ffb86c" # Orange
set highlight-active-color      "#ff79c6" # Pink

set default-bg                  "#282a36" # Background
set default-fg                  "#f8f8f2" # Foreground

set render-loading              true
set render-loading-fg           "#282a36" # Background
set render-loading-bg           "#f8f8f2" # Foreground

#
# Recolor mode settings
#

set recolor-lightcolor          "#282a36" # Background
set recolor-darkcolor           "#f8f8f2" # Foreground

#
# Startup options
#
set adjust-open width
set recolor true

#+end_src

* Nvim
#+begin_src vimrc :tangle ~/.config/nvim/init.vim
" truecolor
if (has("nvim"))
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

if (has("termguicolors"))
  set termguicolors
endif

" Install Plugged
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugged
call plug#begin(expand('~/.vim/plugged'))
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'andweeb/presence.nvim'
call plug#end()


" UI
set number relativenumber
colorscheme dracula
set background=dark
let g:nord_cursor_line_number_background = 1
let g:nord_uniform_diff_background = 1

" Indentation
set tabstop=4
set shiftwidth=4

" Use the system clipboard
set clipboard=unnamedplus

inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction
#+end_src

* Sxhkd
#+begin_src conf :tangle ~/.config/sxhkd/sxhkdrc
  #!/bin/sh

  super + Escape
	  pkill -USR1 -x sxhkd

  Print
	  $HOME/.scripts/misc/scrotss

  super + Print
	  flameshot gui

  F12
	  rofi -show run && rm -f ~/pix/rofi.png && scrot -F ~/pix/rofi.png && xclip -sel c -t image/png ~/pix/rofi.png

  super + d
	  rofi -show run

  alt + d
	  dmenu_run

  super + Return
	  st

  super + k
	  kitty

  super + w
	  $HOME/.scripts/custom_emoji/custom_emoji.sh

  super + e
	  $HOME/.scripts/emojis/emoji.sh

  super + s
	  $HOME/.scripts/scripts_menu/scripts_menu.sh

  super + p
	  $HOME/.scripts/misc/passmenu

  super + f
	  rofi -show file-browser-extended -show-icons -file-browser-hide-parent

  XF86AudioRaiseVolume 
	  pamixer -i 2 5%

  XF86AudioLowerVolume 
	  pamixer -d 2 5%

  XF86AudioMute 
	  pamixer -t

  super + shift + x
	  ~/.scripts/system/lock.sh

  super + alt + {q,r}
	  bspc {quit,wm -r}

  # close and kill
  super + {_,shift + }q
	  bspc node -{c,k}

  # alternate between the tiled and monocle layout
  super + m
	  bspc desktop -l next

  # send the newest marked node to the newest preselected node
  super + y
	  bspc node newest.marked.local -n newest.!automatic.local

  # swap the current node and the biggest window
  super + g
	  bspc node -s biggest.window

  #
  # state/flags
  #

  # set the window state
  super + {t,shift + t,s,f}
	  bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

  # set the node flags
  super + ctrl + {m,x,y,z}
	  bspc node -g {marked,locked,sticky,private}

  #
  # focus/swap
  #

  # focus the node in the given direction
  super + {_,shift + }{h,j,k,l}
	  bspc node -{f,s} {west,south,north,east}

  # focus the node for the given path jump
  super + {p,b,comma,period}
	  bspc node -f @{parent,brother,first,second}

  # focus the next/previous window in the current desktop
  super + {_,shift + }c
	  bspc node -f {next,prev}.local.!hidden.window

  # focus the next/previous desktop in the current monitor
  super + bracket{left,right}
	  bspc desktop -f {prev,next}.local

  # focus the last node/desktop
  super + {grave,Tab}
	  bspc {node,desktop} -f last

  # focus the older or newer node in the focus history
  super + {o,i}
	  bspc wm -h off; \
	  bspc node {older,newer} -f; \
	  bspc wm -h on

  # focus or send to the given desktop
  super + {_,shift + }{1-9,0}
	  bspc {desktop -f,node -d} '^{1-9,10}'

  #
  # preselect
  #

  # preselect the direction
  super + ctrl + {h,j,k,l}
	  bspc node -p {west,south,north,east}

  # preselect the ratio
  super + ctrl + {1-9}
	  bspc node -o 0.{1-9}

  # cancel the preselection for the focused node
  super + {_,space + }q
	  bspc node -{c,k}

  # cancel the preselection for the focused desktop
  super + ctrl + shift + space
	  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

  #
  # move/resize
  #

  # expand a window by moving one of its side outward
  super + alt + {h,j,k,l}
	  bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

  # contract a window by moving one of its side inward
  super + alt + shift + {h,j,k,l}
	  bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

  # move a floating window
  super + {Left,Down,Up,Right}
	  bspc node -v {-20 0,0 20,0 -20,20 0}

#+end_src

* Nsxiv
#+begin_src sh :tangle ~/.config/nsxiv/exec/key-handler
#!/bin/sh

while read file
do
	case "$1" in 
		"w") setbg "$file" ;;
		"c") xclip -sel c -t image/png -i "$file" ;;
		"r") convert "$file" -rotate 90 /tmp/out.jpg ;;
		"m") curl -F"file=@$file" 0x0.st | xclip -sel c ;;
	esac
done

#+end_src

* Picom
#+begin_src conf :tangle ~/.config/picom/picom.conf
#################################
#             Shadows           #
#################################


# Enabled client-side shadows on windows. Note desktop windows 
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, 
# unless explicitly requested using the wintypes option.
#
# shadow = false
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 7;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = .75

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = -7;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = -7;

# Avoid drawing shadows on dock/panel windows. This option is deprecated,
# you should use the *wintypes* option in your config file instead.
#
# no-dock-shadow = false

# Don't draw shadows on drag-and-drop windows. This option is deprecated, 
# you should use the *wintypes* option in your config file instead.
#
# no-dnd-shadow = false

# Red color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-red = 0

# Green color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-green = 0

# Blue color value of shadow (0.0 - 1.0, defaults to 0).
# shadow-blue = 0

# Do not paint shadows on shaped windows. Note shaped windows 
# here means windows setting its shape through X Shape extension. 
# Those using ARGB background is beyond our control. 
# Deprecated, use 
#   shadow-exclude = 'bounding_shaped'
# or 
#   shadow-exclude = 'bounding_shaped && !rounded_corners'
# instead.
#
# shadow-ignore-shaped = ''

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "_GTK_FRAME_EXTENTS@:c"
];

# Specify a X geometry that describes the region in which shadow should not
# be painted in, such as a dock window region. Use 
#    shadow-exclude-reg = "x10+0+0"
# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.
#
# shadow-exclude-reg = "" 

# Crop shadow of a window fully on a particular Xinerama screen to the screen.
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
fade-in-step = 0.1;

# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
# fade-out-step = 0.03
fade-out-step = 0.1;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10

# Specify a list of conditions of windows that should not be faded.
# fade-exclude = []

# Do not fade on window open/close.
# no-fading-openclose = false

# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 1
inactive-opacity = 0.975;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
frame-opacity = 0.7;

# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)
# menu-opacity = 1.0

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = true;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 1

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [ "class_g = 'Cairo-clock'" ];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
# like `50:name *= "Firefox"`. picom-trans is recommended over this. 
# Note we don't make any guarantee about possible conflicts with other 
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
opacity-rule = [
	"90:class_g = 'Rofi'",
	"80:class_g = 'slock'",
	"100:class_g = 'kitty'",
	"100:class_g = 'firefox'",
	"100:class_g = 'Emacs'"
]


#################################
#     Background-Blurring       #
#################################


# Parameters for background blurring, see the *BLUR* section for more information.
# blur-method = "dual_kawase";
# blur-size = 12
#
# blur-deviation = false

# Blur background of semi-transparent / ARGB windows. 
# Bad in performance, with driver-dependent behavior. 
# The name of the switch may change without prior notifications.
#
# blur-background = false

# Blur background of windows when the window frame is not opaque. 
# Implies:
#    blur-background 
# Bad in performance, with driver-dependent behavior. The name may change.
#
# blur-background-frame = false


# Use fixed blur strength rather than adjusting according to window opacity.
# blur-background-fixed = false


# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ''
blur-kern = "3x3box";


# Exclude conditions for background blur.
# blur-background-exclude = []
blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "_GTK_FRAME_EXTENTS@:c"
];

#################################
#       General Settings        #
#################################

# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.
# daemon = false

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
backend = "glx";
# backend = "xrender";

# Enable/disable VSync.
# vsync = false
vsync = true

# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.
# dbus = false

# Try to detect WM windows (a non-override-redirect window with no 
# child that has 'WM_STATE') and mark them as active.
#
mark-wmwin-focused = false
# mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
mark-ovredir-focused = false
# mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them 
# shaped windows. The accuracy is not very high, unfortunately.
#
# detect-rounded-corners = false
detect-rounded-corners = true;

# Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
#
# detect-client-opacity = false
detect-client-opacity = true;

# Specify refresh rate of the screen. If not specified or 0, picom will 
# try detecting this with X RandR extension.
#
# refresh-rate = 60
refresh-rate = 0

# Limit picom to repaint at most once every 1 / 'refresh_rate' second to 
# boost performance. This should not be used with 
#   vsync drm/opengl/opengl-oml
# as they essentially does sw-opti's job already, 
# unless you wish to specify a lower refresh rate than the actual value.
#
# sw-opti = 

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, 
# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, 
# provided that the WM supports it.
#
use-ewmh-active-win = true 

# Unredirect all windows if a full-screen opaque window is detected, 
# to maximize performance for full-screen windows. Known to cause flickering 
# when redirecting/unredirecting windows.
#
# unredir-if-possible = false

# Delay before unredirecting the window, in milliseconds. Defaults to 0.
# unredir-if-possible-delay = 0

# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.
# unredir-if-possible-exclude = []

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows 
# in the same group focused at the same time.
#
# detect-transient = false
detect-transient = true

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# detect-transient is enabled, too.
#
# detect-client-leader = false
detect-client-leader = true

# Resize damaged region by a specific number of pixels. 
# A positive value enlarges it while a negative one shrinks it. 
# If the value is positive, those additional pixels will not be actually painted 
# to screen, only used in blur calculation, and such. (Due to technical limitations, 
# with use-damage, those pixels will still be incorrectly painted to screen.) 
# Primarily used to fix the line corruption issues of blur, 
# in which case you should use the blur radius value here 
# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, 
# with a 5x5 one you use `--resize-damage 2`, and so on). 
# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.
#
# resize-damage = 1

# Specify a list of conditions of windows that should be painted with inverted color. 
# Resource-hogging, and is not well tested.
#
# invert-color-include = []

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never 
# practically happened) and may not work with blur-background. 
# My tests show a 15% performance boost. Recommended.
#
# glx-no-stencil = false

# GLX backend: Avoid rebinding pixmap on window damage. 
# Probably could improve performance on rapid window content changes, 
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
# glx-no-rebind-pixmap = false

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
use-damage = true

# Use X Sync fence to sync clients' draw calls, to make sure all draw 
# calls are finished before picom starts drawing. Needed on nvidia-drivers 
# with GLX backend for some users.
#
# xrender-sync-fence = false

# GLX backend: Use specified GLSL fragment shader for rendering window contents. 
# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` 
# in the source tree for examples.
#
# glx-fshader-win = ''

# Force all windows to be painted with blending. Useful if you 
# have a glx-fshader-win that could turn opaque pixels transparent.
#
# force-win-blend = false

# Do not use EWMH to detect fullscreen windows. 
# Reverts to checking if a window is fullscreen based only on its size and coordinates.
#
# no-ewmh-fullscreen = false

# Dimming bright windows so their brightness doesn't exceed this set value. 
# Brightness of a window is estimated by averaging all pixels in the window, 
# so this could comes with a performance hit. 
# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)
#
# max-brightness = 1.0

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
# transparent-clipping = false

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter. 
# If using the "TRACE" log level, it's better to log into a file 
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "warn";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr. 
# Otherwise, logs will to written to the given file, though some of the early 
# logs might still be written to the stderr. 
# When setting this option from the config file, it is recommended to use an absolute path.
#
# log-file = '/path/to/your/log/file'

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'

# Window type settings
# 
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
# 
# Following per window-type options are available: ::
# 
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
# 
#   opacity:::
#     Controls default opacity of the window type.
# 
#   focus:::
#     Controls whether the window of this type is to be always considered focused. 
#     (By default, all window types except "normal" and "dialog" has this on.)
# 
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you 
#     normally won't be able to see. Useful when the window has parts of it 
#     transparent, and you want shadows in those areas.
# 
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become 
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection, 
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};

#+end_src

* Rofi
** Basic Configuration
#+begin_src css :tangle ~/.config/rofi/config.rasi
configuration {
	modi: "run,ssh,file-browser-extended";
	font: "monospace 12";
	location: 2;
	terminal: "kitty";
	kb-remove-char-back: "BackSpace";
	kb-remove-to-eol: "Control+Shift+e";
	kb-accept-entry: "Control+m,Return,KP_Enter";
	kb-mode-next: "Shift+Right,Control+Tab,Control+l";
	kb-mode-previous: "Shift+Left,Control+Shift+Tab,Control+h";
	kb-mode-complete: "Control+p";
	kb-row-up: "Up,Control+k,Shift+Tab,Shift+ISO_Left_Tab";
	kb-row-down: "Down,Control+j";
  timeout {
      action: "kb-cancel";
      delay:  0;
  }
  filebrowser {
      directories-first: true;
      sorting-method:    "name";
  }
}

@theme "~/.config/rofi/palenight.rasi"

#+end_src

** Theme
#+begin_src css :tangle ~/.config/rofi/palenight.rasi
,* {
	palenight1: #292D3E;
	palenight2: #242837;
	palenight3: #A6Accd;
	palenight4: #82aaff;
	palenight5: #89DDFF;
	palenight6: #ff5370;
	spacing: 2;
	background-color: var(palenight1);
	background: var(palenight1);
	foreground: var(palenight3);
	normal-background: var(background);
	normal-foreground: var(foreground);
	alternate-normal-background: var(background);
	alternate-normal-foreground: var(foreground);
	selected-normal-background: var(palenight4);
	selected-normal-foreground: var(background);
	active-background: var(background);
	active-foreground: var(palenight5);
	alternate-active-background: var(background);
	alternate-active-foreground: var(palenight5);
	selected-active-background: var(palenight5);
	selected-active-foreground: var(background);
	urgent-background: var(background);
	urgent-foreground: var(palenight6);
	alternate-urgent-background: var(background);
	alternate-urgent-foreground: var(palenight6);
	selected-urgent-background: var(palenight6);
	selected-urgent-foreground: var(background);
}

element {
	padding: 0px 0px 0px 7px;
	spacing: 5px;
	border: 0;
	cursor: pointer;
}

element normal.normal {
	background-color: var(normal-background);
	text-color: var(normal-foreground);
}

element normal.urgent {
	background-color: var(urgent-background);
	text-color: var(urgent-foreground);
}

element normal.active {
	background-color: var(active-background);
	text-color: var(active-foreground);
}

element selected.normal {
	background-color: var(selected-normal-background);
	text-color: var(selected-normal-foreground);
}

element selected.urgent {
	background-color: var(selected-urgent-background);
	text-color: var(selected-urgent-foreground);
}

element selected.active {
	background-color: var(selected-active-background);
	text-color: var(selected-active-foreground);
}

element alternate.normal {
	background-color: var(alternate-normal-background);
	text-color: var(alternate-normal-foreground);
}

element alternate.urgent {
	background-color: var(alternate-urgent-background);
	text-color: var(alternate-urgent-foreground);
}

element alternate.active {
	background-color: var(alternate-active-background);
	text-color: var(alternate-active-foreground);
}

element-text {
	background-color: rgba(0, 0, 0, 0%);
	text-color: inherit;
	highlight: italic;
	cursor: inherit;
}

element-icon {
	background-color: rgba(0, 0, 0, 0%);
	size: 1.5em;
	text-color: inherit;
	cursor: inherit;
}

window {
	padding: 0;
	border: 0;
	background-color: var(background);
	width: 25%;
	height: 50%;
}

mainbox {
	padding: 0;
	border: 0;
}

message {
	margin: 0px 7px;
}

textbox {
	text-color: var(foreground);
}

listview {
	margin: 0px 0px 5px;
	scrollbar: true;
	spacing: 2px;
	fixed-height: 0;
}

scrollbar {
	padding: 0;
	handle-width: 14px;
	border: 0;
	handle-color: var(palenight2);
}

button {
	spacing: 0;
	text-color: var(normal-foreground);
	cursor: pointer;
}

button selected {
	background-color: var(selected-normal-background);
	text-color: var(selected-normal-foreground);
}

inputbar {
	padding: 7px;
	margin: 7px;
	spacing: 0;
	text-color: var(normal-foreground);
	background-color: var(palenight2);
	children: [ entry ];
}

entry {
	spacing: 0;
	cursor: text;
	text-color: var(normal-foreground);
	background-color: var(palenight2);
}

#+end_src

** File Browser Extended
=rofi-file-browser-extended= will show a warning if this file doesn't exist.
#+begin_src fundamental :tangle ~/.config/rofi/file-browser
#+end_src

* Dunst
#+begin_src conf :tangle ~/.config/dunst/dunstrc
[global]
    frame_width = 2
    font = Iosevka 11.5
    show_indicators = no
    history_length = 500
    alignment = center

  [urgency_normal]
    background = "#282a36"
    foreground = "#6272a4"
    timeout = 5
    default_icon = /home/demonkingswarn/.config/dunst/normal.png

[mocp]
    summary = "🎵 Now playing 🎵"
    new_icon = /home/demonkingswarn/.config/dunst/music.png
    set_stack_tag = true

[ani-dmenu]
    summary = "😔 Exiting.... 🔴"
    new_icon = /home/demonkingswarn/.config/dunst/ani-dmenu.png

[scrot]
    summary = "🖼️ Scrot 🖼️"
    new_icon = /home/demonkingswarn/.config/dunst/image.png

[flameshot]
	summary = "Flameshot Info"
	new_icon = /home/demonkingswarn/.config/dunst/image.png

[blueman]
    appname = blueman
    new_icon = /home/demonkingswarn/.config/dunst/bluetooth.png

[discord]
    appname = discord
    set_stack_tag = false
    timeout = 10

# vim: ft=cfg
[play_sound]
	summary = "*"
    script = "~/.config/dunst/notif.sh"

#+end_src

* Starship
#+begin_src conf-toml :tangle ~/.config/starship.toml
# Don't print a new line at the start of the prompt
add_newline = true

# Make prompt a single line instead of two lines
[line_break]
disabled = true

# Replace the "❯" symbol in the prompt with "➜"
#[character]                         # The name of the module we are configuring is "character"
#success_symbol = "[➜](bold green)"  # The "success_symbol" is set to "➜" with color "bold green"

# Use custom format
#format = """
#[┌───────────────────>](bold green)
#[│](bold green)$directory$rust$package
#[└─>](bold green) """

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[aws]
style = "bold #ffb86c"

[character]
error_symbol = "[❯](bold #ff5555)"
success_symbol = "[❯](bold #50fa7b)"

[cmd_duration]
style = "bold #f1fa8c"

[directory]
style = "bold #50fa7b"

[git_branch]
style = "bold #ff79c6"

[git_status]
style = "bold #ff5555"

[hostname]
style = "bold #bd93f9"


[username]
format = "[$user]($style) on "
style_user = "bold #8be9fd"

#+end_src

* Git
#+begin_src conf-toml :tangle ~/.gitconfig
  [user]
	  email = rockingswarn@gmail.com
	  name = DemonKingSwarn
  [init]
	  defaultBranch = main
  [alias]
	  cmp = "!f() { git add . && git commit -m \"$@\" && git push; }; f"

  [filter "lfs"]
	  clean = git-lfs clean -- %f
	  smudge = git-lfs smudge -- %f
	  process = git-lfs filter-process
	  required = true
  [http]
	  sslverify = false
  [sendmail]
	smtpserver = localhost
	smtpuser = demonkingswarn
	smtpencryption = none
	smtpserverport = 1025
	smtpsslcertpath = ""
#+end_src

* Ferdium
** Discord
*** Base Dracula Theme
#+begin_src css :tangle ~/.config/Ferdium/recipes/discord/user.css
:root {
  /* Dracula Base Colors */
  --dracula-background: #282a36 !important;
  --dracula-current-line: #44475a !important;
  --dracula-selection: #44475a !important;
  --dracula-foreground: #f8f8f2 !important;
  --dracula-comment: #6272a4 !important;
  --dracula-cyan: #8be9fd !important;
  --dracula-green: #50fa7b !important;
  --dracula-orange: #ffb86c !important;
  --dracula-pink: #ff79c6 !important;
  --dracula-purple: #bd93f9 !important;
  --dracula-red: #ff5555 !important;
  --dracula-yellow: #f1fa8c !important;
  /* Dracula ANSI Colors */
  --dracula-color0: #21222c !important;
  --dracula-color1: #ff5555 !important;
  --dracula-color2: #50fa7b !important;
  --dracula-color3: #f1fa8c !important;
  --dracula-color4: #f1fa8c !important;
  --dracula-color5: #ff79c6 !important;
  --dracula-color6: #8be9fd !important;
  --dracula-color7: #f8f8f2 !important;
  --dracula-color8: #6272a4 !important;
  --dracula-color9: #ff6e6e !important;
  --dracula-color10: #69ff94 !important;
  --dracula-color11: #ffffa5 !important;
  --dracula-color12: #d6acff !important;
  --dracula-color13: #ff92df !important;
  --dracula-color14: #a4ffff !important;
  --dracula-color15: #ffffff !important;
  /* Dracula Other Colors */
  --dracula-line-highlight: #44475a75 !important;
  --dracula-non-text: #ffffff1a !important;
  --dracula-white: #ffffff !important;
  --dracula-tab-drop-background: #44475a70 !important;
  --dracula-background-lighter: #424450;
  --dracula-background-alt: #343746 !important;

  /* Discord Root Colors */
  --header-primary: var(--dracula-foreground) !important;
  --background-primary: var(--dracula-background) !important;
  --background-secondary: var(--dracula-background) !important;
  --background-mobile-primary: var(--dracula-background) !important;
  --background-mobile-secondary: var(--dracula-background) !important;
  --background-secondary-alt: var(--dracula-background) !important;
  --background-tertiary: var(--dracula-background-alt) !important;
  --background-accent: var(--dracula-current-line) !important;
  --background-floating: var(--dracula-background) !important;
  --background-modifier-selected: var(--dracula-current-line) !important;
  --activity-card-background: var(--dracula-background) !important;
  --interactive-normal: var(--dracula-foreground) !important;
  --channeltextarea-background: var(--dracula-selection) !important;
  --rs-online-color: var(--dracula-green) !important;
  --rs-idle-color: var(--dracula-orange) !important;
  --rs-dnd-color: var(--dracula-red) !important;
  --rs-offline-color: var(--dracula-selection) !important;
  --rs-streaming-color: var(--dracula-purple) !important;
  --rs-invisible-color: var(--dracula-comment) !important;
  --interactive-muted: var(--dracula-comment) !important;
  --scrollbar-auto-thumb: var(--dracula-comment) !important;
  --scrollbar-auto-track: var(--dracula-background-alt) !important;
  --scrollbar-thin-thumb: var(--dracula-comment) !important;
  --scrollbar-auto-scrollbar-color-thumb: var(--dracula-comment) !important;
  --scrollbar-auto-scrollbar-color-track: var(
    --dracula-background-alt
  ) !important;
}

.wrapper-1BJsBx.selected-bZ3Lue .childWrapper-anI2G9,
.wrapper-1BJsBx:hover .childWrapper-anI2G9 {
  background-color: var(--dracula-comment) !important;
}

/* Home */
.container-2cd8Mz {
  background-color: var(--dracula-background) !important;
}

/* Autocomplete popup */
.autocomplete-3NRXG8 {
  background-color: var(--dracula-background) !important;
}

.autocomplete-3jLKbj {
  background-color: var(--dracula-background) !important;
}

/* Autocomplete popup selection */
.selected-3H3-RC {
  background-color: var(--dracula-selection) !important;
}

/* Scroll Bar */
.theme-dark
  .scrollerThemed-2oenus.themedWithTrack-q8E3vB
  .scroller-2FKFPG::-webkit-scrollbar-track-piece {
  background-color: var(--dracula-selection) !important;
  border: 4px solid var(--dracula-background) !important;
  border-radius: 8px !important;
}
/* Outlines */
.scroller-kQBbkU,
.form-3gdLxP,
.members-3WRCEx,
.scroller-1ox3I2,
.panels-3wFtMD,
.scroller-3X7KbA,
.container-ZMc96U.themed-Hp1KC_,
.header-3OsQeK,
.searchBar-zdmu7v,
.scroller-2LSbBU,
.searchBar-3TnChZ,
.peopleColumn-1wMU14,
.container-3u6dG-,
.scroller-9moviB,
.nowPlayingColumn-1eCBCN,
.header-2V-4Sw,
.contentRegion-3HkfJJ {
  border-color: var(--dracula-current-line) !important;
  border-style: solid !important;
}

/* Settings Content Pane */
.contentRegion-3HkfJJ {
  border-width: 0 0 0 1px !important;
}
/* Chat */
.scroller-kQBbkU {
  border-width: 1px 1px 0 1px !important;
}
/* Message Box */
.form-3gdLxP {
  border-width: 0 1px 1px !important;
}
/* Member List */
.members-3WRCEx {
  border-width: 1px 1px 1px 0 !important;
}
/* Channel List */
.scroller-1ox3I2 {
  border-width: 1px 0 0 0 !important;
}
/* User Area */
.panels-3wFtMD {
  border-width: 1px 0 1px 0 !important;
}
/* Guild List */
.scroller-3X7KbA {
  border-width: 1px !important;
}
/* Channel Header */
.container-ZMc96U.themed-Hp1KC_ {
  border-width: 1px 1px 0 0 !important;
}
/* Guild Header */
.header-3OsQeK {
  border-width: 1px 0 0 0 !important;
}
/* Search Bar */
.searchBar-zdmu7v {
  border-width: 1px !important;
}
.searchBar-3TnChZ {
  border-width: 1px 0 0 0 !important;
}
/* People, Game Library, Nitro */
.peopleColumn-1wMU14,
.container-3u6dG-,
.scroller-9moviB {
  border-width: 1px !important;
}
/* Now Playing Column */
.nowPlayingColumn-1eCBCN {
  border-width: 1px 1px 1px 0 !important;
}

/* Syntax Highlighing in Code Blocks*/
code {
  color: var(--dracula-foreground) !important;
}
span.hljs-built_in {
  color: var(--dracula-purple) !important;
}
span.hljs-keyword {
  color: var(--dracula-pink) !important;
}
span.hljs-title {
  color: var(--dracula-cyan) !important;
}
span.hljs-attr {
  color: var(--dracula-foreground) !important;
}
span.hljs-string {
  color: var(--dracula-yellow) !important;
}
span.hljs-number {
  color: var(--dracula-purple) !important;
}
span.hljs-symbol {
  color: var(--dracula-orange) !important;
}
span.hljs-meta {
  color: var(--dracula-foreground) !important;
}
span.hljs-meta-keyword {
  color: var(--dracula-pink) !important;
}
span.hljs-meta-string {
  color: var(--dracula-orange) !important;
}

#+end_src

*** Custom Fonts
#+begin_src css :tangle ~/.config/Ferdium/recipes/discord/user.css
,* {
  font-family: "sans-serif" !important;
}
span {
  font-family: "sans-serif" !important;
}
code, code * {
  font-family: "monospace" !important;
}

#+end_src

* SSH
#+begin_src conf :tangle ~/.ssh/config
Host aur.archlinux.org
  IdentityFile ~/.ssh/aur
  User aur
#+end_src

* Mimeapps
#+begin_src conf :tangle ~/.config/mimeapps.list
[Default Applications]
application/pdf=org.pwmt.zathura.desktop
text/html=firefox.desktop
x-scheme-handler/http=firefox.desktop
x-scheme-handler/https=firefox.desktop
x-scheme-handler/about=firefox.desktop
image/png=nsxiv.desktop
image/jpeg=nsxiv.desktop
image/tiff=nsxiv.desktop;
image/webp=nsxiv.desktop
image/gif=mpv.desktop;
application/octet-stream=mpv.desktop;
text/markdown=emacsclient.desktop
#+end_src

* Paru
#+begin_src conf :tangle ~/.config/paru/paru.conf
[options]
PgpFetch
Devel
Provides
DevelSuffixes = -git -cvs -svn -bzr -darcs -always -hg

[bin]
Sudo = doas
#+end_src

* Alacritty
Configuration for Alacritty, the GPU enhanced terminal emulator.
Any items in the =env= entry below will be added as environment variables. Some entries may override variables set by alacritty itself.
#+begin_src conf :tangle ~/.config/alacritty/alacritty.yml
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
  #  columns: 0
  #  lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 6
    y: 6

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Background opacity
  #
  # Window opacity as a floating point number from `0.0` to `1.0`.
  # The value `0.0` is completely transparent and `1.0` is opaque.
  opacity: 0.8
  # opacity: 0.80

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  #decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  title: Alacritty

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 5000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8

# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    #family: Source Code Pro
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    # family: Source Code Pro
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: Source Code Pro
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: Source Code Pro
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    family: JetBrains Mono
    # family: UbuntuMono Nerd Font
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font
    # family: Mononoki Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
  size: 12.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

#######################################
##      START OF COLOR SCHEMES       ##
#######################################
schemes:
  ### Doom One ###
  DoomOne: &DoomOne
    primary:
      background: '#282c34'
      foreground: '#bbc2cf'
    cursor:
      text: CellBackground
      cursor: '#528bff'
    selection:
      text: CellForeground
      background: '#3e4451'
    normal:
      black:   '#1c1f24'
      red:     '#ff6c6b'
      green:   '#98be65'
      yellow:  '#da8548'
      blue:    '#51afef'
      magenta: '#c678dd'
      cyan:    '#5699af'
      white:   '#202328'
    bright:
      black:   '#5b6268'
      red:     '#da8548'
      green:   '#4db5bd'
      yellow:  '#ecbe7b'
      blue:    '#3071db'   # This is 2257a0 in Doom Emacs but I lightened it.
      magenta: '#a9a1e1'
      cyan:    '#46d9ff'
      white:   '#dfdfdf'

  ### Dracula ###
  Dracula: &Dracula
    primary:
      background: '#282a36'
      foreground: '#f8f8f2'
    cursor:
      text: CellBackground
      cursor: CellForeground
    vi_mode_cursor:
      text: CellBackground
      cursor: CellForeground
    search:
      matches:
        foreground: '#44475a'
        background: '#50fa7b'
      focused_match:
        foreground: '#44475a'
        background: '#ffb86c'
      bar:
        background: '#282a36'
        foreground: '#f8f8f2'
    line_indicator:
      foreground: None
      background: None
    selection:
      text: CellForeground
      background: '#44475a'
    normal:
      black:   '#000000'
      red:     '#ff5555'
      green:   '#50fa7b'
      yellow:  '#f1fa8c'
      blue:    '#bd93f9'
      magenta: '#ff79c6'
      cyan:    '#8be9fd'
      white:   '#bfbfbf'
    bright:
      black:   '#4d4d4d'
      red:     '#ff6e67'
      green:   '#5af78e'
      yellow:  '#f4f99d'
      blue:    '#caa9fa'
      magenta: '#ff92d0'
      cyan:    '#9aedfe'
      white:   '#e6e6e6'
    dim:
      black:   '#14151b'
      red:     '#ff2222'
      green:   '#1ef956'
      yellow:  '#ebf85b'
      blue:    '#4d5b86'
      magenta: '#ff46b0'
      cyan:    '#59dffc'
      white:   '#e6e6d1'

  ### Gruvbox dark ###
  GruvboxDark: &GruvboxDark
    # Default colors
    primary:
      # hard contrast: background = '0x1d2021'
      background: '#282828'
      # soft contrast: background = '0x32302f'
      foreground: '#ebdbb2'

    # Normal colors
    normal:
      black:   '#282828'
      red:     '#cc241d'
      green:   '#98971a'
      yellow:  '#d79921'
      blue:    '#458588'
      magenta: '#b16286'
      cyan:    '#689d6a'
      white:   '#a89984'

    # Bright colors
    bright:
      black:   '#928374'
      red:     '#fb4934'
      green:   '#b8bb26'
      yellow:  '#fabd2f'
      blue:    '#83a598'
      magenta: '#d3869b'
      cyan:    '#8ec07c'
      white:   '#ebdbb2'

### Monokai ###
  MonokaiPro: &MonokaiPro
    # Default colors
    primary:
      background: '#2D2A2E'
      foreground: '#FCFCFA'

    # Normal colors
    normal:
      black:   '#403E41'
      red:     '#FF6188'
      green:   '#A9DC76'
      yellow:  '#FFD866'
      blue:    '#FC9867'
      magenta: '#AB9DF2'
      cyan:    '#78DCE8'
      white:   '#FCFCFA'

    # Bright colors
    bright:
      black:   '#727072'
      red:     '#FF6188'
      green:   '#A9DC76'
      yellow:  '#FFD866'
      blue:    '#FC9867'
      magenta: '#AB9DF2'
      cyan:    '#78DCE8'
      white:   '#FCFCFA'

  ### Nord ###
  Nord: &Nord
    # Default colors
    primary:
      background: '#2E3440'
      foreground: '#D8DEE9'

    # Normal colors
    normal:
      black:   '#3B4252'
      red:     '#BF616A'
      green:   '#A3BE8C'
      yellow:  '#EBCB8B'
      blue:    '#81A1C1'
      magenta: '#B48EAD'
      cyan:    '#88C0D0'
      white:   '#E5E9F0'

    # Bright colors
    bright:
      black:   '#4C566A'
      red:     '#BF616A'
      green:   '#A3BE8C'
      yellow:  '#EBCB8B'
      blue:    '#81A1C1'
      magenta: '#B48EAD'
      cyan:    '#8FBCBB'
      white:   '#ECEFF4'

  ### Oceanic Next ###
  OceanicNext: &OceanicNext
    # Default colors
    primary:
      background: '#1b2b34'
      foreground: '#d8dee9'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: '#1b2b34'
      cursor: '#ffffff'

    # Normal colors
    normal:
      black:   '#343d46'
      red:     '#EC5f67'
      green:   '#99C794'
      yellow:  '#FAC863'
      blue:    '#6699cc'
      magenta: '#c594c5'
      cyan:    '#5fb3b3'
      white:   '#d8dee9'

    # Bright colors
    bright:
      black:   '#343d46'
      red:     '#EC5f67'
      green:   '#99C794'
      yellow:  '#FAC863'
      blue:    '#6699cc'
      magenta: '#c594c5'
      cyan:    '#5fb3b3'
      white:   '#d8dee9'

  ### Palenight ###
  Palenight: &Palenight
    # Default colors
    primary:
      background: '#292d3e'
      foreground: '#d0d0d0'

    # Normal colors
    normal:
      black:   '#292d3e'
      red:     '#f07178'
      green:   '#c3e88d'
      yellow:  '#ffcb6b'
      blue:    '#82aaff'
      magenta: '#c792ea'
      cyan:    '#89ddff'
      white:   '#d0d0d0'

    # Bright colors
    bright:
      black:   '#434758'
      red:     '#ff8b92'
      green:   '#ddffa7'
      yellow:  '#ffe585'
      blue:    '#9cc4ff'
      magenta: '#e1acff'
      cyan:    '#a3f7ff'
      white:   '#ffffff'

  ### Solarized Dark ###
  SolarizedDark: &SolarizedDark
    # Default colors
    primary:
      background: '#002b36' # base03
      foreground: '#839496' # base0

    # Cursor colors
    cursor:
      text:   '#002b36' # base03
      cursor: '#839496' # base0

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#002b36' # base03
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3

  ### Solarized Light ###
  SolarizedLight: &SolarizedLight
    # Default colors
    primary:
      background: '#fdf6e3' # base3
      foreground: '#657b83' # base00

    # Cursor colors
    cursor:
      text:   '#fdf6e3' # base3
      cursor: '#657b83' # base00

    # Normal colors
    normal:
      black:   '#073642' # base02
      red:     '#dc322f' # red
      green:   '#859900' # green
      yellow:  '#b58900' # yellow
      blue:    '#268bd2' # blue
      magenta: '#d33682' # magenta
      cyan:    '#2aa198' # cyan
      white:   '#eee8d5' # base2

    # Bright colors
    bright:
      black:   '#002b36' # base03
      red:     '#cb4b16' # orange
      green:   '#586e75' # base01
      yellow:  '#657b83' # base00
      blue:    '#839496' # base0
      magenta: '#6c71c4' # violet
      cyan:    '#93a1a1' # base1
      white:   '#fdf6e3' # base3

  ### Tomorrow Night ###
  TomorrowNight: &TomorrowNight
     # Default colors
    primary:
      background: '#1d1f21'
      foreground: '#c5c8c6'

    # Colors the cursor will use if `custom_cursor_colors` is true
    cursor:
      text: '#1d1f21'
      cursor: '#ffffff'

    # Normal colors
    normal:
      black:   '#1d1f21'
      red:     '#cc6666'
      green:   '#b5bd68'
      yellow:  '#e6c547'
      blue:    '#81a2be'
      magenta: '#b294bb'
      cyan:    '#70c0ba'
      white:   '#373b41'

    # Bright colors
    bright:
      black:   '#666666'
      red:     '#ff3334'
      green:   '#9ec400'
      yellow:  '#f0c674'
      blue:    '#81a2be'
      magenta: '#b77ee0'
      cyan:    '#54ced6'
      white:   '#282a2e'

######################################################################
## SET THEME: Choose ONE color scheme from those in the above list. ##
## ###################################################################
# Available themes are:
# *DoomOne
# *Dracula
# *GruvboxDark
# *MonokaiPro
# *Nord
# *OceanicNext
# *Palenight
# *SolarizedLight
# *SolarizedDark
# *TomorrowNight

colors: *DoomOne

#######################################
##       END OF COLOR SCHEMES        ##
#######################################

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '#ffffff'

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

#cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
key_bindings:
    # (Windows, Linux, and BSD only)
  - { key: V,         mods: Control|Shift, action: Paste                       }
  - { key: C,         mods: Control|Shift, action: Copy                        }
  - { key: Insert,    mods: Shift,         action: PasteSelection              }
  - { key: Key0,      mods: Control,       action: ResetFontSize               }
  - { key: Equals,    mods: Control,       action: IncreaseFontSize            }
  - { key: Plus,      mods: Control,       action: IncreaseFontSize            }
  - { key: Minus,     mods: Control,       action: DecreaseFontSize            }
  - { key: F11,       mods: None,          action: ToggleFullscreen            }
  - { key: Paste,     mods: None,          action: Paste                       }
  - { key: Copy,      mods: None,          action: Copy                        }
  - { key: L,         mods: Control,       action: ClearLogNotice              }
  - { key: L,         mods: Control,       chars: "\x0c"                       }
  - { key: PageUp,    mods: None,          action: ScrollPageUp,   mode: ~Alt  }
  - { key: PageDown,  mods: None,          action: ScrollPageDown, mode: ~Alt  }
  - { key: Home,      mods: Shift,         action: ScrollToTop,    mode: ~Alt  }
  - { key: End,       mods: Shift,         action: ScrollToBottom, mode: ~Alt  }
#+end_src

* Feh
#+begin_src sh :tangle ~/.config/feh/themes
feh -. -B #2E3440 -N -^ "[%u/%l] %n (%wx%h) - feh"
#+end_src

* Mpv
** Script opts
#+begin_src  conf :tangle ~/.config/mpv/script-opts/discord.conf
key=D
active=yes
client_id=737663962677510245
binary_path=$HOME/.config/mpv/discord
socket_path=/tmp/mpvsocket
use_static_socket_path=yes
autohide_threshold=0
#+end_src

** Scripts
#+begin_src lua :tangle ~/.config/mpv/scripts/discord.lua
local msg = require("mp.msg")
local opts = require("mp.options")
local utils = require("mp.utils")

local options = {
	key = "D",
	active = true,
	client_id = "737663962677510245",
	binary_path = "",
	socket_path = "/tmp/mpvsocket",
	use_static_socket_path = true,
	autohide_threshold = 0,
}
opts.read_options(options, "discord")

if options.binary_path == "" then
	msg.fatal("Missing binary path in config file.")
	os.exit(1)
end

function file_exists(path) -- fix(#23): use this instead of utils.file_info
	local f = io.open(path, "r")
	if f ~= nil then
		io.close(f)
		return true
	else
		return false
	end
end

if not file_exists(options.binary_path) then
	msg.fatal("The specified binary path does not exist.")
	os.exit(1)
end

local version = "1.6.1"
msg.info(("mpv-discord v%s by tnychn"):format(version))

local socket_path = options.socket_path
if not options.use_static_socket_path then
	local pid = utils.getpid()
	local filename = ("mpv-discord-%s"):format(pid)
	if socket_path == "" then
		socket_path = "/tmp/" -- default
	end
	socket_path = utils.join_path(socket_path, filename)
elseif socket_path == "" then
	msg.fatal("Missing socket path in config file.")
	os.exit(1)
end
msg.info(("(mpv-ipc): %s"):format(socket_path))
mp.set_property("input-ipc-server", socket_path)

local cmd = nil

local function start()
	if cmd == nil then
		cmd = mp.command_native_async({
			name = "subprocess",
			playback_only = false,
			args = {
				options.binary_path,
				socket_path,
				options.client_id,
			},
		}, function() end)
		msg.info("launched subprocess")
		mp.osd_message("Discord Rich Presence: Started")
	end
end

function stop()
	mp.abort_async_command(cmd)
	cmd = nil
	msg.info("aborted subprocess")
	mp.osd_message("Discord Rich Presence: Stopped")
end

if options.active then
	mp.register_event("file-loaded", start)
end

mp.add_key_binding(options.key, "toggle-discord", function()
	if cmd ~= nil then
		stop()
	else
		start()
	end
end)

mp.register_event("shutdown", function()
	if cmd ~= nil then
		stop()
	end
	if not options.use_static_socket_path then
		os.remove(socket_path)
	end
end)

if options.autohide_threshold > 0 then
	local timer = nil
	local t = options.autohide_threshold
	mp.observe_property("pause", "bool", function(_, value)
		if value == true then
			timer = mp.add_timeout(t, function()
				if cmd ~= nil then
					stop()
				end
			end)
		else
			if timer ~= nil then
				timer:kill()
				timer = nil
			end
			if options.active and cmd == nil then
				start()
			end
		end
	end)
end
#+end_src

* Gtk
#+begin_src conf :tangle ~/.gtkrc-2.0
include "/home/demonkingswarn/.gtkrc-2.0.mine"
gtk-theme-name="gtk-master"
gtk-icon-theme-name="Dracula"
gtk-font-name="JetBrainsMono Nerd Font 10"
gtk-cursor-theme-name="Adwaita"
gtk-cursor-theme-size=0
gtk-toolbar-style=GTK_TOOLBAR_BOTH
gtk-toolbar-icon-size=GTK_ICON_SIZE_LARGE_TOOLBAR
gtk-button-images=1
gtk-menu-images=1
gtk-enable-event-sounds=1
gtk-enable-input-feedback-sounds=1
gtk-xft-antialias=1
gtk-xft-hinting=1
gtk-xft-hintstyle="hintfull"
gtk-xft-rgba="rgb"
#+end_src

* X11
** Xinitrc
#+begin_src sh :tangle ~/.config/X11/xinitrc
#!/usr/bin/env sh

$HOME/.scripts/system/startup.sh &

exec bspwm
#+end_src

** Xprofile
#+begin_src sh :tangle ~/.config/X11/xprofile
xset -b
#+end_src

* Tmux
** Colours
#+begin_src conf :tangle ~/.config/tmux.conf
tm_yellow=colour03
tm_gray=colour08
tm_purple=colour05
tm_black=colour00
tm_green=colour10
#+end_src

** General
#+begin_src conf :tangle ~/.config/tmux.conf
set -g prefix C-Space
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
set -g allow-rename off
set -g status-justify right
set -g status-position bottom
#+end_src

** Keyboard
#+begin_src conf :tangle ~/.config/tmux.conf
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key , command-prompt "rename-window '%%'"
bind-key & command-prompt "kill-window"
#+end_src

** Status settings
#+begin_src conf :tangle ~/.config/tmux.conf
set -g status-bg default
set -g status-right ""
set -g @prefix_highlight_fg 'black'
set -g @prefix_highlight_bg 'yellow'
tm_session_name="#[fg=$tm_gray]Session #S"
tm_prefix="#{prefix_highlight}"
set -g status-left $tm_prefix' '$tm_session_name
#+end_src

** Pane colours
#+begin_src conf :tangle ~/.config/tmux.conf
set -g pane-border-fg $tm_gray
set -g pane-active-border-fg $tm_purple
#+end_src

** Message colours
#+begin_src conf :tangle ~/.config/tmux.conf
set -g message-bg $tm_green
set -g message-fg $tm_black
#+end_src

** Pane border settings
#+begin_src conf :tangle ~/.config/tmux.conf
set -g display-panes-active-colour $tm_yellow
set -g display-panes-colour $tm_gray
#+end_src

** Inactive window colours and settings
#+begin_src conf :tangle ~/.config/tmux.conf
set-window-option -g window-status-fg $tm_gray
set-window-option -g window-status-bg default
set -g window-status-format "#W"
#+end_src

** Active window settings
#+begin_src conf :tangle ~/.config/tmux.conf
set-window-option -g window-status-current-fg $tm_yellow
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-format "#[bold]#W"
#+end_src

** Vim Tmux Navigator
#+begin_src conf :tangle ~/.config/tmux.conf
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#+end_src

** Tmux Plugin Manager
#+begin_src conf :tangle ~/.config/tmux.conf
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
run '~/.tmux/plugins/tpm/tpm'
#+end_src

* User Dirs
#+begin_src conf :tangle ~/.config/user-dirs.dirs
  XDG_DOWNLOAD_DIR="$HOME/dl"
  XDG_DOCUMENTS_DIR="$HOME/dox"
  XDG_MUSIC_DIR="$HOME/musics"
  XDG_PICTURES_DIR="$HOME/pix"
  XDG_VIDEOS_DIR="$HOME/vids"
  XDG_PUBLICSHARE_DIR="$HOME/pub"
#+end_src
